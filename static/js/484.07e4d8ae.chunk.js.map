{"version":3,"file":"static/js/484.07e4d8ae.chunk.js","mappings":"4OACA,EAA4B,wBAA5B,EAA+D,uBAA/D,EAA4G,kC,SCoD5G,EA7Ca,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GACrBC,EAAgBC,aAAaC,QAAQ,QAC3C,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EACJV,EAAOW,OAAS,EAAIX,EAASY,KAAKC,MAAMV,IAAkB,GAC5DK,EAAYE,EACb,GAAE,CAACV,EAAQG,IAEZ,IAAMW,EAAUP,EAASQ,KAAI,YAA8C,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACvD,OACE,gBAAIC,UAAWC,EAAf,WACE,uBAAIL,KACJ,mCAAWC,MACX,mCACA,mCACA,uBAAIC,KACJ,mCACA,eAAGE,UAAWC,EAAd,2BAAsDF,OAPtBJ,EAUrC,IAQD,OACE,iBAAKK,UAAU,YAAf,WACE,mBACEE,KAAK,SACLF,UAAWC,EACXE,QAXmB,WACvBpB,aAAaqB,WAAW,QACxB3B,GAAS4B,EAAAA,EAAAA,IAAe,KACxBlB,EAAY,GACb,EAIG,uBAOA,wBAAKM,KACL,6CAGL,EC3CD,EAPiB,WACf,OACE,0BACE,SAAC,EAAD,KAGL,C,8ECRM,IAAMa,EAAc,SAAC,GAAD,SAAGC,MAAkBC,KAArB,EACd3B,EAAU,SAAC,GAAD,SAAG0B,MAAkBE,IAArB,C","sources":["webpack://prometheus-x-course-task/./src/modules/Cart/Cart.module.scss?310d","modules/Cart/Cart.jsx","pages/CartPage.jsx","redux/books/books-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnBought\":\"Cart_btnBought__qeFji\",\"cartItem\":\"Cart_cartItem__JZK9j\",\"cartItem_totalPrice\":\"Cart_cartItem_totalPrice__YtyV7\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { getCart } from \"../../redux/books/books-selectors\";\nimport { fetchCleanCart } from \"../../redux/books/books-operation\";\n\nimport css from './Cart.module.scss';\n\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const isCart = useSelector(getCart);\n  const cartLocalData = localStorage.getItem('cart');\n  const [cartData, setCartData] = useState([]);\n  useEffect(() => {\n    const updatedCartData =\n      isCart.length > 0 ? isCart : JSON.parse(cartLocalData) || [];\n    setCartData(updatedCartData);\n  }, [isCart, cartLocalData]);\n\n  const element = cartData.map(({ id, title, price, count, totalPrice }) => {\n    return (\n      <li className={css.cartItem} key={id}>\n        <p>{title}</p>\n        <p>Price: {price}</p>\n        <p>Count:</p>\n        <button>-</button>\n        <p>{count}</p>\n        <button>+</button>\n        <p className={css.cartItem_totalPrice}>Total price, ${totalPrice}</p>\n      </li>\n    );\n  })\n\n  const handleCleanLocal = () => {\n    localStorage.removeItem('cart');\n    dispatch(fetchCleanCart([]));\n    setCartData([]);\n  }\n\n  return (\n    <div className=\"container\">\n      <button\n        type=\"button\"\n        className={css.btnBought}\n        onClick={handleCleanLocal}\n      >\n        Purchase\n      </button>\n      <ul>{element}</ul>\n      <p>Total price, $ </p>\n    </div>\n  );\n};\nexport default Cart;\n\n","import Cart from 'modules/Cart/Cart';\n\nconst CartPage = () => {\n  return (\n    <div>\n      <Cart />\n    </div>\n  );\n};\nexport default CartPage;\n","export const getAllBooks = ({ books }) => books.items;\nexport const getCart = ({ books }) => books.cart;\n"],"names":["dispatch","useDispatch","isCart","useSelector","getCart","cartLocalData","localStorage","getItem","useState","cartData","setCartData","useEffect","updatedCartData","length","JSON","parse","element","map","id","title","price","count","totalPrice","className","css","type","onClick","removeItem","fetchCleanCart","getAllBooks","books","items","cart"],"sourceRoot":""}