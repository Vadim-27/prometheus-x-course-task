{"version":3,"file":"static/js/258.5dcb72a4.chunk.js","mappings":"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","sources":["../node_modules/nanoid/url-alphabet/index.js","webpack://prometheus-x-course-task/./src/shared/components/TextField/TextField.module.scss?1181","shared/components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","shared/hooks/useForm.jsx","modules/SingIn/SingInForm/initialState.js","modules/SingIn/SingInForm/fields.js","webpack://prometheus-x-course-task/./src/modules/SingIn/SingInForm/SingInForm.module.scss?7492","modules/SingIn/SingInForm/SingInForm.jsx","webpack://prometheus-x-course-task/./src/modules/SingIn/SingIn.module.scss?aa80","modules/SingIn/SingIn.jsx","pages/SingInPage.jsx","webpack://prometheus-x-course-task/./src/pages/page.module.scss?7e89"],"sourcesContent":["export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__Lt-lM\",\"field\":\"TextField_field__VZyp7\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport css from './TextField.module.scss';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor={id}>{label}</label>\n      <input className={css.field} id={id} onChange={handleChange} {...props} />\n    </div>\n  );\n};\nexport default TextField;\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import { useCallback, useState } from \"react\";\n\n\nconst useForm = ({ onSubmit, initialState }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\nexport default useForm;\n","const initialState = {\n  userName: '',\n}\nexport default initialState;\n","const fields = {\n  userName: {\n    type: 'userName',\n    name: 'userName',\n    required: true,\n    label: 'Username',\n    placeholder: ' type Username',\n    pattern: '^.{4,16}$',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SingInForm_form__l+SUH\",\"btn\":\"SingInForm_btn__SPaXZ\",\"btnDisabled\":\"SingInForm_btnDisabled__teOVD\"};","import { useEffect, useState } from 'react';\nimport TextField from 'shared/components/TextField/TextField';\nimport useForm from 'shared/hooks/useForm';\nimport initialState from './initialState';\nimport fields from './fields';\n\nimport css from './SingInForm.module.scss';\n\nconst SingInForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { userName } = state;\n  const [userNameError, setUserNameError] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n\n  useEffect(() => {\n    let timeoutId;\n\n    if (isFocused && (userName.length < 4 || userName.length > 16)) {\n      timeoutId = setTimeout(() => {\n        setUserNameError('Username must be between 4 and 16 characters');\n      }, 3000);\n    } else {\n      setUserNameError('');\n    }\n\n    return () => clearTimeout(timeoutId);\n  }, [userName, isFocused]);\n\n  const handleFocus = () => {\n    setIsFocused(true);\n  };\n\n  return (\n    <form className={css.form} onSubmit={e => handleSubmit(e, onSubmit)}>\n      <TextField\n        value={userName}\n        handleChange={handleChange}\n        {...fields.userName}\n        onFocus={handleFocus}\n      />\n      {userNameError && <p className={css.error}>{userNameError}</p>}\n      <button\n        className={`${css.btn} ${userNameError && css.btnDisabled}`}\n        type=\"submit\"\n      >\n        Sign-In\n      </button>\n    </form>\n  );\n};\nexport default SingInForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperSection\":\"SingIn_wrapperSection__owXeg\"};","import AvatarImg from '../../assete/png/avatar.png';\nimport SingInForm from './SingInForm/SingInForm';\nimport css from './SingIn.module.scss';\n\nconst SingIn = ({ onSubmit }) => {\n  return (\n    <section className={css.wrapperSection}>\n      <img src={AvatarImg} alt=\"avatar\" />\n      <SingInForm onSubmit={onSubmit} />\n    </section>\n  );\n};\nexport default SingIn;\n","import SingIn from 'modules/SingIn/SingIn';\nimport css from './page.module.scss'\n\nconst SingInPage = ({ onSubmit }) => {\n  return (\n    <div className={css.wrapper}>\n      <SingIn onSubmit={onSubmit} />\n    </div>\n  );\n};\nexport default SingInPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"page_wrapper__KZ6Xj\",\"notFoundPage\":\"page_notFoundPage__OzMtn\",\"notFoundPageImg\":\"page_notFoundPageImg__AKTFW\"};"],"names":["urlAlphabet","label","handleChange","props","id","useMemo","size","bytes","crypto","getRandomValues","Uint8Array","nanoid","className","css","htmlFor","onChange","onSubmit","initialState","useState","state","setState","useCallback","target","name","value","prevState","handleSubmit","e","preventDefault","userName","type","required","placeholder","pattern","useForm","userNameError","setUserNameError","isFocused","setIsFocused","useEffect","timeoutId","length","setTimeout","clearTimeout","fields","onFocus","src","AvatarImg","alt"],"sourceRoot":""}